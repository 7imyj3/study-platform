{
  "version": 3,
  "sources": ["../../../../../node_modules/hono/dist/utils/cookie.js", "../../../../../node_modules/hono/dist/client/utils.js", "../../../../../node_modules/hono/dist/client/client.js"],
  "sourcesContent": ["// src/utils/cookie.ts\r\nimport { decodeURIComponent_ } from \"./url.js\";\r\nvar algorithm = { name: \"HMAC\", hash: \"SHA-256\" };\r\nvar getCryptoKey = async (secret) => {\r\n  const secretBuf = typeof secret === \"string\" ? new TextEncoder().encode(secret) : secret;\r\n  return await crypto.subtle.importKey(\"raw\", secretBuf, algorithm, false, [\"sign\", \"verify\"]);\r\n};\r\nvar makeSignature = async (value, secret) => {\r\n  const key = await getCryptoKey(secret);\r\n  const signature = await crypto.subtle.sign(algorithm.name, key, new TextEncoder().encode(value));\r\n  return btoa(String.fromCharCode(...new Uint8Array(signature)));\r\n};\r\nvar verifySignature = async (base64Signature, value, secret) => {\r\n  try {\r\n    const signatureBinStr = atob(base64Signature);\r\n    const signature = new Uint8Array(signatureBinStr.length);\r\n    for (let i = 0, len = signatureBinStr.length; i < len; i++) {\r\n      signature[i] = signatureBinStr.charCodeAt(i);\r\n    }\r\n    return await crypto.subtle.verify(algorithm, secret, signature, new TextEncoder().encode(value));\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\nvar validCookieNameRegEx = /^[\\w!#$%&'*.^`|~+-]+$/;\r\nvar validCookieValueRegEx = /^[ !#-:<-[\\]-~]*$/;\r\nvar parse = (cookie, name) => {\r\n  if (name && cookie.indexOf(name) === -1) {\r\n    return {};\r\n  }\r\n  const pairs = cookie.trim().split(\";\");\r\n  const parsedCookie = {};\r\n  for (let pairStr of pairs) {\r\n    pairStr = pairStr.trim();\r\n    const valueStartPos = pairStr.indexOf(\"=\");\r\n    if (valueStartPos === -1) {\r\n      continue;\r\n    }\r\n    const cookieName = pairStr.substring(0, valueStartPos).trim();\r\n    if (name && name !== cookieName || !validCookieNameRegEx.test(cookieName)) {\r\n      continue;\r\n    }\r\n    let cookieValue = pairStr.substring(valueStartPos + 1).trim();\r\n    if (cookieValue.startsWith('\"') && cookieValue.endsWith('\"')) {\r\n      cookieValue = cookieValue.slice(1, -1);\r\n    }\r\n    if (validCookieValueRegEx.test(cookieValue)) {\r\n      parsedCookie[cookieName] = decodeURIComponent_(cookieValue);\r\n      if (name) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return parsedCookie;\r\n};\r\nvar parseSigned = async (cookie, secret, name) => {\r\n  const parsedCookie = {};\r\n  const secretKey = await getCryptoKey(secret);\r\n  for (const [key, value] of Object.entries(parse(cookie, name))) {\r\n    const signatureStartPos = value.lastIndexOf(\".\");\r\n    if (signatureStartPos < 1) {\r\n      continue;\r\n    }\r\n    const signedValue = value.substring(0, signatureStartPos);\r\n    const signature = value.substring(signatureStartPos + 1);\r\n    if (signature.length !== 44 || !signature.endsWith(\"=\")) {\r\n      continue;\r\n    }\r\n    const isVerified = await verifySignature(signature, signedValue, secretKey);\r\n    parsedCookie[key] = isVerified ? signedValue : false;\r\n  }\r\n  return parsedCookie;\r\n};\r\nvar _serialize = (name, value, opt = {}) => {\r\n  let cookie = `${name}=${value}`;\r\n  if (name.startsWith(\"__Secure-\") && !opt.secure) {\r\n    throw new Error(\"__Secure- Cookie must have Secure attributes\");\r\n  }\r\n  if (name.startsWith(\"__Host-\")) {\r\n    if (!opt.secure) {\r\n      throw new Error(\"__Host- Cookie must have Secure attributes\");\r\n    }\r\n    if (opt.path !== \"/\") {\r\n      throw new Error('__Host- Cookie must have Path attributes with \"/\"');\r\n    }\r\n    if (opt.domain) {\r\n      throw new Error(\"__Host- Cookie must not have Domain attributes\");\r\n    }\r\n  }\r\n  if (opt && typeof opt.maxAge === \"number\" && opt.maxAge >= 0) {\r\n    if (opt.maxAge > 3456e4) {\r\n      throw new Error(\r\n        \"Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.\"\r\n      );\r\n    }\r\n    cookie += `; Max-Age=${opt.maxAge | 0}`;\r\n  }\r\n  if (opt.domain && opt.prefix !== \"host\") {\r\n    cookie += `; Domain=${opt.domain}`;\r\n  }\r\n  if (opt.path) {\r\n    cookie += `; Path=${opt.path}`;\r\n  }\r\n  if (opt.expires) {\r\n    if (opt.expires.getTime() - Date.now() > 3456e7) {\r\n      throw new Error(\r\n        \"Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.\"\r\n      );\r\n    }\r\n    cookie += `; Expires=${opt.expires.toUTCString()}`;\r\n  }\r\n  if (opt.httpOnly) {\r\n    cookie += \"; HttpOnly\";\r\n  }\r\n  if (opt.secure) {\r\n    cookie += \"; Secure\";\r\n  }\r\n  if (opt.sameSite) {\r\n    cookie += `; SameSite=${opt.sameSite.charAt(0).toUpperCase() + opt.sameSite.slice(1)}`;\r\n  }\r\n  if (opt.priority) {\r\n    cookie += `; Priority=${opt.priority}`;\r\n  }\r\n  if (opt.partitioned) {\r\n    if (!opt.secure) {\r\n      throw new Error(\"Partitioned Cookie must have Secure attributes\");\r\n    }\r\n    cookie += \"; Partitioned\";\r\n  }\r\n  return cookie;\r\n};\r\nvar serialize = (name, value, opt) => {\r\n  value = encodeURIComponent(value);\r\n  return _serialize(name, value, opt);\r\n};\r\nvar serializeSigned = async (name, value, secret, opt = {}) => {\r\n  const signature = await makeSignature(value, secret);\r\n  value = `${value}.${signature}`;\r\n  value = encodeURIComponent(value);\r\n  return _serialize(name, value, opt);\r\n};\r\nexport {\r\n  parse,\r\n  parseSigned,\r\n  serialize,\r\n  serializeSigned\r\n};\r\n", "// src/client/utils.ts\r\nvar mergePath = (base, path) => {\r\n  base = base.replace(/\\/+$/, \"\");\r\n  base = base + \"/\";\r\n  path = path.replace(/^\\/+/, \"\");\r\n  return base + path;\r\n};\r\nvar replaceUrlParam = (urlString, params) => {\r\n  for (const [k, v] of Object.entries(params)) {\r\n    const reg = new RegExp(\"/:\" + k + \"(?:{[^/]+})?\\\\??\");\r\n    urlString = urlString.replace(reg, v ? `/${v}` : \"\");\r\n  }\r\n  return urlString;\r\n};\r\nvar buildSearchParams = (query) => {\r\n  const searchParams = new URLSearchParams();\r\n  for (const [k, v] of Object.entries(query)) {\r\n    if (v === void 0) {\r\n      continue;\r\n    }\r\n    if (Array.isArray(v)) {\r\n      for (const v2 of v) {\r\n        searchParams.append(k, v2);\r\n      }\r\n    } else {\r\n      searchParams.set(k, v);\r\n    }\r\n  }\r\n  return searchParams;\r\n};\r\nvar replaceUrlProtocol = (urlString, protocol) => {\r\n  switch (protocol) {\r\n    case \"ws\":\r\n      return urlString.replace(/^http/, \"ws\");\r\n    case \"http\":\r\n      return urlString.replace(/^ws/, \"http\");\r\n  }\r\n};\r\nvar removeIndexString = (urlSting) => {\r\n  if (/^https?:\\/\\/[^\\/]+?\\/index$/.test(urlSting)) {\r\n    return urlSting.replace(/\\/index$/, \"/\");\r\n  }\r\n  return urlSting.replace(/\\/index$/, \"\");\r\n};\r\nfunction isObject(item) {\r\n  return typeof item === \"object\" && item !== null && !Array.isArray(item);\r\n}\r\nfunction deepMerge(target, source) {\r\n  if (!isObject(target) && !isObject(source)) {\r\n    return source;\r\n  }\r\n  const merged = { ...target };\r\n  for (const key in source) {\r\n    const value = source[key];\r\n    if (isObject(merged[key]) && isObject(value)) {\r\n      merged[key] = deepMerge(merged[key], value);\r\n    } else {\r\n      merged[key] = value;\r\n    }\r\n  }\r\n  return merged;\r\n}\r\nexport {\r\n  buildSearchParams,\r\n  deepMerge,\r\n  mergePath,\r\n  removeIndexString,\r\n  replaceUrlParam,\r\n  replaceUrlProtocol\r\n};\r\n", "// src/client/client.ts\r\nimport { serialize } from \"../utils/cookie.js\";\r\nimport {\r\n  buildSearchParams,\r\n  deepMerge,\r\n  mergePath,\r\n  removeIndexString,\r\n  replaceUrlParam,\r\n  replaceUrlProtocol\r\n} from \"./utils.js\";\r\nvar createProxy = (callback, path) => {\r\n  const proxy = new Proxy(() => {\r\n  }, {\r\n    get(_obj, key) {\r\n      if (typeof key !== \"string\" || key === \"then\") {\r\n        return void 0;\r\n      }\r\n      return createProxy(callback, [...path, key]);\r\n    },\r\n    apply(_1, _2, args) {\r\n      return callback({\r\n        path,\r\n        args\r\n      });\r\n    }\r\n  });\r\n  return proxy;\r\n};\r\nvar ClientRequestImpl = class {\r\n  url;\r\n  method;\r\n  queryParams = void 0;\r\n  pathParams = {};\r\n  rBody;\r\n  cType = void 0;\r\n  constructor(url, method) {\r\n    this.url = url;\r\n    this.method = method;\r\n  }\r\n  fetch = async (args, opt) => {\r\n    if (args) {\r\n      if (args.query) {\r\n        this.queryParams = buildSearchParams(args.query);\r\n      }\r\n      if (args.form) {\r\n        const form = new FormData();\r\n        for (const [k, v] of Object.entries(args.form)) {\r\n          if (Array.isArray(v)) {\r\n            for (const v2 of v) {\r\n              form.append(k, v2);\r\n            }\r\n          } else {\r\n            form.append(k, v);\r\n          }\r\n        }\r\n        this.rBody = form;\r\n      }\r\n      if (args.json) {\r\n        this.rBody = JSON.stringify(args.json);\r\n        this.cType = \"application/json\";\r\n      }\r\n      if (args.param) {\r\n        this.pathParams = args.param;\r\n      }\r\n    }\r\n    let methodUpperCase = this.method.toUpperCase();\r\n    const headerValues = {\r\n      ...args?.header,\r\n      ...typeof opt?.headers === \"function\" ? await opt.headers() : opt?.headers\r\n    };\r\n    if (args?.cookie) {\r\n      const cookies = [];\r\n      for (const [key, value] of Object.entries(args.cookie)) {\r\n        cookies.push(serialize(key, value, { path: \"/\" }));\r\n      }\r\n      headerValues[\"Cookie\"] = cookies.join(\",\");\r\n    }\r\n    if (this.cType) {\r\n      headerValues[\"Content-Type\"] = this.cType;\r\n    }\r\n    const headers = new Headers(headerValues ?? void 0);\r\n    let url = this.url;\r\n    url = removeIndexString(url);\r\n    url = replaceUrlParam(url, this.pathParams);\r\n    if (this.queryParams) {\r\n      url = url + \"?\" + this.queryParams.toString();\r\n    }\r\n    methodUpperCase = this.method.toUpperCase();\r\n    const setBody = !(methodUpperCase === \"GET\" || methodUpperCase === \"HEAD\");\r\n    return (opt?.fetch || fetch)(url, {\r\n      body: setBody ? this.rBody : void 0,\r\n      method: methodUpperCase,\r\n      headers,\r\n      ...opt?.init\r\n    });\r\n  };\r\n};\r\nvar hc = (baseUrl, options) => createProxy(function proxyCallback(opts) {\r\n  const parts = [...opts.path];\r\n  const lastParts = parts.slice(-3).reverse();\r\n  if (lastParts[0] === \"toString\") {\r\n    if (lastParts[1] === \"name\") {\r\n      return lastParts[2] || \"\";\r\n    }\r\n    return proxyCallback.toString();\r\n  }\r\n  if (lastParts[0] === \"valueOf\") {\r\n    if (lastParts[1] === \"name\") {\r\n      return lastParts[2] || \"\";\r\n    }\r\n    return proxyCallback;\r\n  }\r\n  let method = \"\";\r\n  if (/^\\$/.test(lastParts[0])) {\r\n    const last = parts.pop();\r\n    if (last) {\r\n      method = last.replace(/^\\$/, \"\");\r\n    }\r\n  }\r\n  const path = parts.join(\"/\");\r\n  const url = mergePath(baseUrl, path);\r\n  if (method === \"url\") {\r\n    let result = url;\r\n    if (opts.args[0]) {\r\n      if (opts.args[0].param) {\r\n        result = replaceUrlParam(url, opts.args[0].param);\r\n      }\r\n      if (opts.args[0].query) {\r\n        result = result + \"?\" + buildSearchParams(opts.args[0].query).toString();\r\n      }\r\n    }\r\n    return new URL(result);\r\n  }\r\n  if (method === \"ws\") {\r\n    const webSocketUrl = replaceUrlProtocol(\r\n      opts.args[0] && opts.args[0].param ? replaceUrlParam(url, opts.args[0].param) : url,\r\n      \"ws\"\r\n    );\r\n    const targetUrl = new URL(webSocketUrl);\r\n    const queryParams = opts.args[0]?.query;\r\n    if (queryParams) {\r\n      Object.entries(queryParams).forEach(([key, value]) => {\r\n        if (Array.isArray(value)) {\r\n          value.forEach((item) => targetUrl.searchParams.append(key, item));\r\n        } else {\r\n          targetUrl.searchParams.set(key, value);\r\n        }\r\n      });\r\n    }\r\n    const establishWebSocket = (...args) => {\r\n      if (options?.webSocket !== void 0 && typeof options.webSocket === \"function\") {\r\n        return options.webSocket(...args);\r\n      }\r\n      return new WebSocket(...args);\r\n    };\r\n    return establishWebSocket(targetUrl.toString());\r\n  }\r\n  const req = new ClientRequestImpl(url, method);\r\n  if (method) {\r\n    options ??= {};\r\n    const args = deepMerge(options, { ...opts.args[1] });\r\n    return req.fetch(opts.args[0], args);\r\n  }\r\n  return req;\r\n}, []);\r\nexport {\r\n  hc\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
